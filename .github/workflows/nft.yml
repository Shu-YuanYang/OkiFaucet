name: NFT
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      id: go
    - name: Setup env for GO
    #  this is only used until the setup-go action is updated
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash
    - name: install runsimgh
      run: |
        go get github.com/cosmos/tools/cmd/runsim@v1.0.0
    - uses: actions/cache@v1
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-runsim-binary
  unit-test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      id: go
    - name: Setup env for GO
    #  this is only used until the setup-go action is updated
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash
    - uses: actions/checkout@v2
    - name: Unit_test
      run: cd incubator/nft && make test
  test-sim-nondeterminism:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: actions/setup-go@v1
      id: go
      - name: Setup env for GO
      #  this is only used until the setup-go action is updated
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
    - name: test runsim
      run: |
        runsim

    
    #     requires:
    #       - setup-dependencies
    # - test-sim-import-export:
    #     requires:
    #       - setup-dependencies
    # - test-sim-after-import:
    #     requires:
    #       - setup-dependencies
    # - test-sim-multi-seed-short:
    #     requires:
    #       - setup-dependencies
